from scipy import linalg   #导入线代模块#
A = np.array([[1,2], [3,4]]) #创造矩阵#
A.T                                  #矩阵转置#
linalg.inv(A)                     #求逆矩阵#
linalg.inv(A).dot(b)           #求解线性方程组方法1#
linalg.solve(A, b)              #求解线性方程组方法2#
linalg.det(A)                    #计算行列式#
linalg.norm(A)                 #计算矩阵或向量的模#
linalg.eigvals(A)              #特征值和特征向量
A2,B = np.linalg.eig(a)       # 其中A2也是特征值，B为特征向量
linalg.svd(A)                  #奇异值分解#
A.dot(B)                          #计算矩阵AB#
A.dot(linalg.inv(B))           #计算矩阵A/B=A乘以B的负一次方=A乘以B的逆矩阵#

马尔科夫链
p0= np.array([0.5,0.3,0.2])         #每个初始状态发生的概率#
p = np.array([[0.7,0.1,0.2], [0.1,0.8,0.1],  [0.05,0.05,0.9]])     #建立概率转移矩阵#
p2=p0.dot(p)

def juz(a,n):                              #计算矩阵的n次幂，可用于马尔科夫链稳定过程#
    n1=0
    while n1<n:
        a=a.dot(a)
        n1=n1+1
    return(a)
